{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.ts", "../app/createEmotionCache.ts", "/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/root.tsx", "../app/theme/theme.ts", "../app/theme/components/button.ts", "../app/theme/components/index.ts", "../app/theme/foundations/colors.ts", "/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/sign-in.tsx", "/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/sign-up.tsx", "/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/index.tsx", "../app/components/logo-banner.tsx", "../app/components/songs-list.tsx", "../app/utils/db.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server'\nimport { CacheProvider } from '@emotion/react'\nimport createEmotionServer from '@emotion/server/create-instance'\nimport { RemixServer } from '@remix-run/react'\nimport type { EntryContext } from '@remix-run/node' // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context'\nimport { createEmotionCache } from './createEmotionCache'\n\nexport default function handleRequest(\n    request: Request,\n    responseStatusCode: number,\n    responseHeaders: Headers,\n    remixContext: EntryContext,\n) {\n    const cache = createEmotionCache()\n    const { extractCriticalToChunks } = createEmotionServer(cache)\n\n    const html = renderToString(\n        <ServerStyleContext.Provider value={null}>\n            <CacheProvider value={cache}>\n                <RemixServer context={remixContext} url={request.url} />\n            </CacheProvider>\n        </ServerStyleContext.Provider>,\n    )\n\n    const chunks = extractCriticalToChunks(html)\n\n    const markup = renderToString(\n        <ServerStyleContext.Provider value={chunks.styles}>\n            <CacheProvider value={cache}>\n                <RemixServer context={remixContext} url={request.url} />\n            </CacheProvider>\n        </ServerStyleContext.Provider>,\n    )\n\n    responseHeaders.set('Content-Type', 'text/html')\n\n    return new Response(`<!DOCTYPE html>${markup}`, {\n        status: responseStatusCode,\n        headers: responseHeaders,\n    })\n}\n", "import { createContext } from 'react'\n\nexport interface ServerStyleContextData {\n    key: string\n    ids: Array<string>\n    css: string\n}\n\nexport const ServerStyleContext = createContext<\n    ServerStyleContextData[] | null\n>(null)\n\nexport interface ClientStyleContextData {\n    reset: () => void\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n    null,\n)\n", "import createCache from '@emotion/cache'\n\nexport function createEmotionCache() {\n    return createCache({ key: 'css' })\n}\n", "import React from 'react'\nimport {\n    Links,\n    LiveReload,\n    Meta,\n    Outlet,\n    Scripts,\n    ScrollRestoration,\n} from '@remix-run/react'\nimport { LoaderFunction } from '@remix-run/node'\nimport { rootAuthLoader } from '@clerk/remix/ssr.server'\nimport { ClerkApp, ClerkCatchBoundary } from '@clerk/remix'\nimport { Box, ChakraProvider, Image } from '@chakra-ui/react'\nimport { withEmotionCache } from '@emotion/react'\nimport { theme } from 'theme'\nimport { ServerStyleContext, ClientStyleContext } from './context'\nimport 'focus-visible' // Remove Chakra's outline caused by clicks\n\nexport const loader: LoaderFunction = args => rootAuthLoader(args)\nexport const CatchBoundary = ClerkCatchBoundary()\n\nfunction App() {\n    return (\n        <Document>\n            <ChakraProvider theme={theme}>\n                <Box as='main' minH='100vh' pos='relative'>\n                    <Outlet />\n\n                    <Image\n                        src='images/cover.png'\n                        alt='Bossa Nova Stack cover'\n                        boxSize='full'\n                        objectFit='cover'\n                        pos='absolute'\n                        top={0}\n                        zIndex={-1}\n                    />\n                </Box>\n            </ChakraProvider>\n        </Document>\n    )\n}\n\nexport default ClerkApp(App)\n\ninterface DocumentProps {\n    children: React.ReactNode\n}\n\nconst Document = withEmotionCache(\n    ({ children }: DocumentProps, emotionCache) => {\n        const serverSyleData = React.useContext(ServerStyleContext)\n        const clientStyleData = React.useContext(ClientStyleContext)\n\n        // Only executed on client\n        React.useEffect(() => {\n            // Re-link sheet container\n            emotionCache.sheet.container = document.head\n            // Re-inject tags\n            const tags = emotionCache.sheet.tags\n            emotionCache.sheet.flush()\n            tags.forEach(tag => {\n                ;(emotionCache.sheet as any)._insertTag(tag)\n            })\n            // Reset cache to reapply global styles\n            clientStyleData?.reset()\n        }, [])\n\n        return (\n            <html lang='en'>\n                <head>\n                    <title>Bossa Nova Stack</title>\n                    <meta charSet='utf-8' />\n                    <meta\n                        name='viewport'\n                        content='width=device-width,initial-scale=1'\n                    />\n                    <Meta />\n                    <Links />\n                    {serverSyleData?.map(({ key, ids, css }) => (\n                        <style\n                            key={key}\n                            data-emotion={`${key} ${ids.join(' ')}`}\n                            dangerouslySetInnerHTML={{ __html: css }}\n                        />\n                    ))}\n                </head>\n\n                <body>\n                    {children}\n                    <ScrollRestoration />\n                    <Scripts />\n                    {process.env.NODE_ENV === 'development' ? (\n                        <LiveReload />\n                    ) : null}\n                </body>\n            </html>\n        )\n    },\n)\n", "import { extendTheme } from '@chakra-ui/react'\nimport { components } from './components'\nimport { colors } from './foundations'\n\nexport const theme = extendTheme({\n    colors,\n    components,\n})\n", "import {\n    ComponentDefaultProps,\n    ComponentStyleConfig,\n    SystemStyleObject,\n} from '@chakra-ui/react'\n\nconst baseStyle: SystemStyleObject = {\n    rounded: 'lg',\n}\n\nconst defaultProps: ComponentDefaultProps = {\n    colorScheme: 'green',\n}\n\nconst sizes: Record<string, SystemStyleObject> = {\n    md: {\n        px: 8,\n    },\n}\n\nconst variants: Record<string, SystemStyleObject> = {}\n\nexport const Button: ComponentStyleConfig = {\n    baseStyle,\n    defaultProps,\n    sizes,\n    variants,\n}\n", "import { Button } from './button'\n\nexport const components = {\n    Button,\n}\n", "// Color shades generated on https://www.tailwindshades.com\n\nexport const colors = {\n    gray: {\n        '50': '#B0B5C0',\n        '100': '#A5ABB6',\n        '200': '#8E96A4',\n        '300': '#788192',\n        '400': '#646D7D',\n        '500': '#525966',\n        '600': '#393E47',\n        '700': '#202328',\n        '800': '#070809',\n        '900': '#000000',\n    },\n\n    green: {\n        '50': '#50FF95',\n        '100': '#3BFF89',\n        '200': '#12FF70',\n        '300': '#00E95C',\n        '400': '#00C04C',\n        '500': '#00973C',\n        '600': '#005F26',\n        '700': '#00270F',\n        '800': '#000000',\n        '900': '#000000',\n    },\n}\n", "import { Center } from '@chakra-ui/react'\nimport { SignIn } from '@clerk/remix'\n\nexport default function SignInRoute() {\n    return (\n        <Center height='100vh' p={10}>\n            <SignIn routing='path' path='/sign-in' signUpUrl='/sign-up' />\n        </Center>\n    )\n}\n", "import { Center } from '@chakra-ui/react'\nimport { SignUp } from '@clerk/remix'\n\nexport default function SignUpRoute() {\n    return (\n        <Center height='100vh' p={10}>\n            <SignUp routing='path' path='/sign-up' signInUrl='/sign-in' />\n        </Center>\n    )\n}\n", "import { LoaderFunction } from 'remix'\nimport { useLoaderData } from '@remix-run/react'\nimport { ActionFunction, json } from '@remix-run/node'\nimport { Link } from '@remix-run/react'\nimport { SignedIn, SignedOut, useAuth } from '@clerk/remix'\nimport { getAuth } from '@clerk/remix/ssr.server'\nimport {\n    Button,\n    Flex,\n    Heading,\n    Stack,\n    Text,\n    useBreakpointValue,\n} from '@chakra-ui/react'\nimport { LogoBanner, SongsList } from 'components'\nimport { getDB } from 'utils'\n\nconst dbErrorMessage =\n    'Something is missing.<br/>Did you set up Supabase yet?<br/>You can find the <a href=\"https://github.com/clerkinc/remix-bossa-nova-stack#configuring-the-database\" target=\"_blank\">instructions in the README file</a>.'\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const { userId } = await getAuth(request)\n    if (!userId) return null\n\n    const db = await getDB(request)\n    if (!db) {\n        return json({ error: dbErrorMessage })\n    }\n\n    const { data } = await db.from('songs').select()\n\n    if (!data) {\n        return json({ error: dbErrorMessage })\n    }\n\n    return json({ songs: data })\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n    const formData = await request.formData()\n    const { userId } = await getAuth(request)\n\n    const song = formData.get('add-song')\n\n    const db = await getDB(request)\n    if (!db) return null\n\n    await db.from('songs').insert({ body: song, user_id: userId })\n    return null\n}\n\nexport default function Index() {\n    const { signOut } = useAuth()\n    const data = useLoaderData()\n    const headingSize = useBreakpointValue({ base: 'lg', sm: '2xl', lg: '4xl' })\n\n    return (\n        <Stack\n            justify='center'\n            textAlign='center'\n            h='100vh'\n            flex={1}\n            color='white'\n            gap={20}\n        >\n            <Stack gap={4} p={{ base: 4, md: 8 }}>\n                <Heading\n                    as='h1'\n                    size={headingSize}\n                    textTransform='uppercase'\n                    color='green.400'\n                >\n                    Bossa Nova Stack\n                </Heading>\n\n                <Text size='lg'>\n                    Check the README file for instructions on how to get this\n                    project deployed.\n                </Text>\n\n                <SignedOut>\n                    <Flex justify='center' gap={4}>\n                        <Button as={Link} to='/sign-in' bg='gray.500'>\n                            Sign in\n                        </Button>\n\n                        <Button as={Link} to='/sign-up'>\n                            Sign up\n                        </Button>\n                    </Flex>\n                </SignedOut>\n\n                <SignedIn>\n                    <Stack align='center' gap={4}>\n                        <SongsList songs={data?.songs || []} />\n\n                        {data?.error && (\n                            <Text\n                                color='red.500'\n                                fontWeight='bold'\n                                sx={{\n                                    '& a': {\n                                        textDecoration: 'underline',\n                                    },\n                                }}\n                                dangerouslySetInnerHTML={{\n                                    __html: data.error,\n                                }}\n                            />\n                        )}\n                        <Button onClick={() => signOut()} bg='gray.500'>\n                            Sign out\n                        </Button>\n                    </Stack>\n                </SignedIn>\n            </Stack>\n\n            <LogoBanner />\n        </Stack>\n    )\n}\n", "import { Flex, Image } from '@chakra-ui/react'\n\nexport function LogoBanner() {\n    return (\n        <Flex\n            direction={{ base: 'column', md: 'row' }}\n            align='center'\n            justify='center'\n            bg='white'\n            gap={8}\n            py={4}\n        >\n            <Image h={6} src='images/remix.svg' />\n            <Image h={8} src='images/clerk.svg' />\n            <Image h={8} src='images/supabase.svg' />\n            <Image h={8} src='images/chakra.png' />\n            <Image h={8} src='images/vercel.svg' />\n        </Flex>\n    )\n}\n", "import React from 'react'\nimport { useUser } from '@clerk/remix'\nimport {\n    Button,\n    Flex,\n    Heading,\n    Input,\n    ListItem,\n    Stack,\n    UnorderedList,\n    useBreakpointValue,\n} from '@chakra-ui/react'\nimport { Form, useTransition } from '@remix-run/react'\n\ntype Props = {\n    songs: Array<{\n        id: string\n        user_id: string\n        body: string\n        created_at: string\n    }>\n}\n\nexport function SongsList({ songs }: Props) {\n    const { user } = useUser()\n    const transition = useTransition()\n    const headingSize = useBreakpointValue({ base: 'sm', md: 'md' })\n\n    const formRef = React.useRef<HTMLFormElement>(null)\n    const addSongRef = React.useRef<HTMLInputElement>(null)\n\n    const isAdding =\n        transition.state === 'submitting' &&\n        transition.submission.formData.get('_action') === 'create'\n\n    React.useEffect(() => {\n        if (!isAdding) {\n            formRef.current?.reset()\n            addSongRef.current?.focus()\n        }\n    }, [isAdding])\n\n    if (!user) return null\n\n    return (\n        <Stack\n            align='stretch'\n            bg='white'\n            color='black'\n            gap={4}\n            px={{ base: 8, sm: 10 }}\n            py={6}\n            rounded='xl'\n            shadow='xl'\n        >\n            <Heading size={headingSize}>\n                {user &&\n                    `Hey ${\n                        user.firstName || user.primaryEmailAddress?.emailAddress\n                    }, here are your favorite songs:`}\n            </Heading>\n\n            <UnorderedList textAlign='left'>\n                {songs.map(song => (\n                    <ListItem key={song.id}>{song.body}</ListItem>\n                ))}\n            </UnorderedList>\n\n            <Form ref={formRef} method='post'>\n                <Flex\n                    direction={{ base: 'column', md: 'row' }}\n                    gap={2}\n                    w='full'\n                >\n                    <Input\n                        name='add-song'\n                        ref={addSongRef}\n                        type='text'\n                        placeholder='Add song'\n                    />\n                    <Button\n                        type='submit'\n                        name='_action'\n                        value='create'\n                        disabled={transition.state === 'submitting'}\n                    >\n                        Add\n                    </Button>\n                </Flex>\n            </Form>\n        </Stack>\n    )\n}\n", "import { getAuth } from '@clerk/remix/ssr.server'\nimport { createClient, SupabaseClient } from '@supabase/supabase-js'\n\nexport const getDB = async (\n    request: Request,\n): Promise<SupabaseClient | null> => {\n    try {\n        const { userId, getToken } = await getAuth(request)\n        if (!userId) return null\n\n        const secret = await getToken({ template: 'supabase' })\n        if (!secret) return null\n\n        const supabaseUrl = process.env.SUPABASE_URL || ''\n        const supabaseKey = process.env.SUPABASE_ANON_KEY || ''\n\n        const client = createClient(supabaseUrl, supabaseKey)\n        client.auth.setAuth(secret)\n        return client\n    } catch (error) {\n        return null\n    }\n}\n", "export default {'version':'89fe0afb','entry':{'module':'/build/entry.client-TWBCX3ET.js','imports':['/build/_shared/chunk-IOMVH2XD.js','/build/_shared/chunk-EWCRA4YU.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-AB4LEOHB.js','imports':['/build/_shared/chunk-2R2M4TBS.js','/build/_shared/chunk-OJTP3DI7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-DBGFDIGG.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-MCOUATHJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up':{'id':'routes/sign-up','parentId':'root','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up-6SWQKAWZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-89FE0AFB.js'};", "\nimport * as entryServer from \"/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/entry.server.tsx\";\nimport * as route0 from \"/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/root.tsx\";\nimport * as route1 from \"/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/sign-in.tsx\";\nimport * as route2 from \"/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/sign-up.tsx\";\nimport * as route3 from \"/Users/marcelcruz/Developer/clerk/remix-bossa-nova-stack/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/sign-up\": {\n      id: \"routes/sign-up\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    }\n  };"],
  "mappings": "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",
  "names": []
}
